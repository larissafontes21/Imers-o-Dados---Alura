# -*- coding: utf-8 -*-
"""Imersão dados 4 ed - Alura - Desafios + Aulas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Vp18Y90cwnInIk-Y-B97G4aZQ48NrYZl
"""

# Importar biblioteca do pandas / Criar variável para armazenar / Ler arquivo csv / Exibir 5 primeiras linhas
import pandas as pd
url = "https://gist.githubusercontent.com/tgcsantos/3bdb29eba6ce391e90df2b72205ba891/raw/22fa920e80c9fa209a9fccc8b52d74cc95d1599b/dados_imoveis.csv"
dados = pd.read_csv(url)
dados.head()

# Mostrar todos dados, total de linhas, para ter uma visão ampla da base - Nome da variável
dados

# Pegar linha aleatória, escolher nº de amostras (qntdade)
dados.sample()

dados.sample(13)

# Ver qual é o tipo dos dados
type (dados)

# Trazer coluna sempre "" (Slice)
dados["Bairro"]

# Buscar na coluna somente a linha solicitada (Slice)
dados["Bairro"][6522]

# Trazer informações dos dados Tipo / Total de linhas e colunas / Dtype: object=str-letras, int64=números
dados.info()

# Média da coluna Metragem: .mean() / Para chamar a coluna: 1) dados["Nome"] 2) dados.Nome
dados.Metragem.mean()

# Média da Metragem somente do bairro Vila Mariana
# 1) Verificar se temos o bairro na base, retorna True or False
dados["Bairro"] == "Vila Mariana"

# 2) Transformar True or False em número (Tirar o booleano)
(dados["Bairro"] == "Vila Mariana") *1

# 3) Somar a qntdade de Vila Mariana na coluna Bairro para descobrir total = Temos 184 imóveis!
sum((dados["Bairro"] == "Vila Mariana"))

# 4) Criar variável para armazenar / Exibir
tem_imoveis_vila = (dados["Bairro"] == "Vila Mariana")
tem_imoveis_vila

# 5) Mostrar todas as colunas somente dos 184 imóveis do Bairro Vila Mariana - Exibe somente True / Armazenar nova variável / Exibir
dados[tem_imoveis_vila]
imoveis_vila_mariana = dados[tem_imoveis_vila]
dados[tem_imoveis_vila]

# 6) Média = .mean(), Dos imóveis somente do Bairro da Vila Mariana, selecionar somente coluna Metragem e tirar a média
imoveis_vila_mariana["Metragem"].mean()

"""Fim! 
  Vale lembrar que a base tem poucos imóveis por isso não é uma verdade absoluta, mas já é possível comparar a Metragem da Vila Mariana 233 com a base total que era 442, que é mais baixa, precisa investigar o por quê? Este é o início.
  Sobre a média importante ressaltar que ela pode variar bastante da realidade por conta dos extremos, ex.: ter imóvel com a metragem muito superior ou inferior afetaria a análise. Pensar sobre outras medidas, tendência de centralidade, como a Mediana para comparar.

"""

# Quais outros bairros têm bastante imóveis vendendo? / Trazer coluna Bairro e contar valores = Qntdade de imóveis em cada bairro
# Length = qntdade de Bairros que temos 701
dados["Bairro"].value_counts()

# Bora para o gráfico!:D
# 1) Armazenar na variável 
# 2) Exibir: Variável + .plot.hist() = Histograma / .plot.bar() = Barras / 701 bairros é mto e não fica boa a visualização
n_imoveis_bairros = dados["Bairro"].value_counts()
n_imoveis_bairros.plot.bar()

# 3) Trazer os 10 primeiros, .head(10), para melhor visualização <3
n_imoveis_bairros.head(10).plot.bar()

# DESAFIOS:
# 1) Média da Metragem dos imóveis para cada um dos Bairros

# Variável somente com as colunas Bairro e Metragem
med_met = (dados[["Bairro", "Metragem"]])
med_met

# Agrupar por Bairro e tirar média da Metragem
graf = med_met.groupby("Bairro")["Metragem"].mean()
graf

# Gráfico da média de Metragem dos Bairros - Somente 15 primeiros
graf.head(15).plot.barh()

# 3) Explorar gráficos, com outras variáveis: usar .plot +:
#‘bar’ or ‘barh’ for bar plots
#‘hist’ for histogram
#‘box’ for boxplot
#‘kde’ or ‘density’ for density plots
#‘area’ for area plots
#‘scatter’ for scatter plots
#‘hexbin’ for hexagonal bin plots
#‘pie’ for pie plots
# Preciso saber configurar as características para melhorar a visualização!

graf.head(15).plot.box()

graf.head(15).plot.area()

graf.head(15).plot.pie()

# 2) formas de selecionar os dados por bairro (consultar os métodos na documentação do pandas) Não consegui localizar no pandas :( mas segue formas aprendidas na aula:
dados["Bairro"]

dados.Bairro

# 4) Outras estatísticas, Média, Mediana, Min, Max = .describe()
# Selecionar colunas do tipo número / T = Transforma linhas em colunas e diminuiu os zeros 
dados[["Metragem", "Quartos", "Banheiros", "Vagas"]].describe().T

"""A média da quantidade de Vagas > Banheiros > Quartos , então, em média os imóveis têm 1 vaga ou mais para cada quarto."""

# 5) Identificar qual bairro não tem nome de rua
# Trazer os nulos da coluna Rua 
sem_nome = dados["Rua"].isnull()
sem_nome

# Trazer todos os dados dos sem_nome
sem = dados[sem_nome]
sem

# Selecionar coluna Bairro dos sem e contar valores
sem["Bairro"].value_counts()

"""Dos 10008 imóveis 3434 estão sem nome de rua, então 34% da base estão sem nome de rua.
Estes imóveis estão divididos em 394 bairros, sendo os top 3  bairros sem identificação da rua:
1º Jardim Guedala, 2º Alto de Pinheiros e 3º Jardim Paulista 
São bairros nobres de São Paulo e talvez os proprietários não se sentiram confiantes para informar a localização exata (Verificar relação bairros nobres X falta de informação da rua)
"""